/* ===== AUGMENTED UI BASE VARIABLES MOVED TO GLOBALS.CSS ===== */

/* ===== AUGMENTED UI BASE CLASSES ===== */
.augmentedBase {
  --aug-border-opacity: var(--aug-border-opacity);
  --aug-border-all: var(--aug-border-width);
  --aug-border-bg: var(--aug-border-color);
  --aug-inset: var(--aug-inset-size);
  --aug-background: var(--aug-primary-bg);
  background: var(--aug-primary-bg);
  color: var(--aug-primary-color);
  border: var(--aug-border-width) solid var(--aug-border-color);
  box-shadow: var(--aug-shadow-base);
  transition: var(--aug-transition);
  max-width: 100vw;
}

.augmentedHover:hover {
  box-shadow: var(--aug-shadow-hover);
  --aug-background: #02141e;
}

/* ===== TERMINAL COMPONENTS ===== */
.terminalContainer {
  --aug-tl: 20px;
  --aug-br: 40px;
  /* Force override Augmented UI border variables */
  --aug-border-opacity: 0.05 !important;
  --aug-border-all: 1px !important;
  --aug-border-bg: #0f1f24 !important;

  background: var(--aug-primary-bg) !important;
  color: var(--aug-primary-color) !important;
  font-family: monospace !important;
  max-width: 100vw !important;
  margin: auto !important;
  min-height: 500px !important;
  border: 1px solid #0f1f24 !important;
  border-radius: 2px !important;
  box-shadow:
    0 0 20px rgba(0, 240, 255, 0.1),
    0 0 40px rgba(0, 240, 255, 0.05),
    inset 0 0 20px rgba(0, 240, 255, 0.02) !important;
  overflow: hidden !important;
  display: flex !important;
  flex-direction: column !important;
  font-size: 1rem !important;
  position: relative !important;
  animation: terminalGlow 4s ease-in-out infinite alternate !important;
}

/* Additional override for Augmented UI */
.terminalContainer[data-augmented-ui] {
  border: 1px solid #0f1f24 !important;
  box-shadow:
    0 0 20px rgba(0, 240, 255, 0.1),
    0 0 40px rgba(0, 240, 255, 0.05),
    inset 0 0 20px rgba(0, 240, 255, 0.02) !important;
}

@keyframes terminalGlow {
  0% {
    box-shadow:
      0 0 20px rgba(0, 240, 255, 0.1),
      0 0 40px rgba(0, 240, 255, 0.05),
      inset 0 0 20px rgba(0, 240, 255, 0.02);
  }
  100% {
    box-shadow:
      0 0 25px rgba(0, 240, 255, 0.15),
      0 0 50px rgba(0, 240, 255, 0.08),
      inset 0 0 25px rgba(0, 240, 255, 0.03);
  }
}

.terminalContainer::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg,
    transparent 0%,
    rgba(0, 240, 255, 0.3) 20%,
    rgba(0, 240, 255, 0.6) 50%,
    rgba(0, 240, 255, 0.3) 80%,
    transparent 100%);
  animation: scanLine 3s linear infinite;
}

@keyframes scanLine {
  0% {
    transform: translateX(-100%);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateX(100%);
    opacity: 0;
  }
}



.topBar {
  display: flex;
  align-items: center;
  padding: 0.5rem 1rem;
  background-color: #031421;
  border-bottom: 1px solid rgba(0, 240, 255, 0.1);
}

/* ===== RESPONSIVE BREAKPOINTS ===== */
@media (max-width: 768px) {
  .topBar {
    padding: 0.4rem 0.75rem;
  }

  .title {
    font-size: 0.65rem;
  }

  .dot {
    width: 0.6rem;
    height: 0.6rem;
    margin-right: 0.4rem;
  }

  .terminalContainer {
    width: 95%;
    font-size: 1rem;
    min-height: 400px;
  }
}

.dot {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 9999px;
  margin-right: 0.5rem;
  box-shadow: 0 0 8px currentColor;
  border: 1px solid #0a0a0a;
  transition: all 0.3s ease;
  animation: dotPulse 2s ease-in-out infinite;
}

.dot:hover {
  transform: scale(1.1);
  box-shadow: 0 0 12px currentColor;
}

@keyframes dotPulse {
  0%, 100% {
    box-shadow: 0 0 8px currentColor;
  }
  50% {
    box-shadow: 0 0 12px currentColor, 0 0 20px currentColor;
  }
}

.red {
  background-color: #ef4444;
}

.yellow {
  background-color: #facc15;
}

.green {
  background-color: #22c55e;
}

.title {
  margin-left: auto;
  font-size: 0.75rem;
  opacity: 0.8;
}

.blink {
  animation: blink 1s step-start infinite;
}

@keyframes blink {
  50% {
    opacity: 0;
  }
}

.terminalContent {
  background-color: #010c14;
  flex-grow: 1;
  padding: 1rem;
  overflow-y: auto;
  overflow-x: hidden;
  word-wrap: break-word;
  font-size: 0.95rem;
  max-width: 100dvw;
  -webkit-overflow-scrolling: touch;
  position: relative;
}

.terminalContent::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background:
    radial-gradient(circle at 20% 80%, rgba(0, 240, 255, 0.03) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(0, 240, 255, 0.02) 0%, transparent 50%);
  pointer-events: none;
  animation: ambientGlow 6s ease-in-out infinite alternate;
}

@keyframes ambientGlow {
  0% {
    opacity: 0.5;
  }
  100% {
    opacity: 1;
  }
}

.terminalContent p {
  word-break: break-word;
  line-height: 1.5;
}

@media (max-width: 768px) {
  .terminalContent,
  .terminalContentTemp,
  .protocolContent {
    max-width: 100vw;
    padding: 1rem;
    font-size: 1rem;
  }

  .protocolContainer {
    margin: 0;
  }

  .skillContainer {
    padding: 1.5rem;
    margin-bottom: 1rem;
  }

  .contactInput {
    padding: 0.6rem;
    font-size: 0.9rem;
  }
}









/* ===== SPECIALIZED CONTAINERS ===== */
.terminalTemp {
  --aug-border-opacity: var(--aug-border-opacity);
  --aug-border-all: var(--aug-border-width);
  --aug-border-bg: var(--aug-border-color);
  --aug-inset: var(--aug-inset-size);
  --aug-background: var(--aug-primary-bg);
  background: var(--aug-primary-bg);
  color: var(--aug-primary-color);
  border: var(--aug-border-width) solid var(--aug-border-color);
  border-radius: 2px;
  box-shadow: var(--aug-shadow-base);
  transition: var(--aug-transition);
  padding: 0;
  display: inline-block;
  max-width: 100vw;
}

.terminalContentTemp {
  background-color: #010c14;
  flex-grow: 1;
  padding-left: 1rem;
  padding-top: 1rem;
  padding-right: 3.3rem;
  padding-bottom: 1rem;
  overflow-y: auto;
  display: inline-block;
  white-space: nowrap;
  max-width: 100dvw;

}

.protocolContainer {
  --aug-border-opacity: var(--aug-border-opacity);
  --aug-border-all: var(--aug-border-width);
  --aug-border-bg: var(--aug-border-color);
  --aug-inset: var(--aug-inset-size);
  --aug-background: var(--aug-primary-bg);
  background: var(--aug-primary-bg);
  color: var(--aug-primary-color);
  border: var(--aug-border-width) solid var(--aug-border-color);
  border-radius: 2px;
  box-shadow: var(--aug-shadow-base);
  transition: var(--aug-transition);
  display: block;
  margin-right: 35%;
  max-width: 100vw;
}

/* Mobile: Full width for OriginProtocol */
@media (max-width: 768px) {
  .protocolContainer {
    margin-right: 0;
    width: 100%;
    display: block;
  }
}

.protocolContent {
  background-color: var(--aug-primary-bg);
  flex-grow: 1;
  padding: 2rem;
}
/* ===== SKILL COMPONENTS ===== */
.skillContainer {
  --aug-border-opacity: var(--aug-border-opacity);
  --aug-border-all: var(--aug-border-width);
  --aug-border-bg: var(--aug-border-color);
  --aug-inset: var(--aug-inset-size);
  --aug-background: var(--aug-primary-bg);
  background: var(--aug-primary-bg);
  color: var(--aug-primary-color);
  background-color: rgba(255, 255, 255, 0.05);
  border-radius: 1rem;
  padding: 2rem;
  box-shadow: var(--aug-shadow-base);
  transition: var(--aug-transition);
  max-width: 100vw;
}

.skillContainer:hover {
  box-shadow: var(--aug-shadow-hover);
  --aug-background: #02141e;
}

/* ===== FORM COMPONENTS ===== */
.contactInput {
  --aug-border-opacity: 0.12;
  --aug-border-all: var(--aug-border-width);
  --aug-border-bg: var(--aug-border-color);
  --aug-inset: var(--aug-inset-size);
  --aug-background: var(--aug-primary-bg);
  background: var(--aug-primary-bg);
  color: var(--aug-primary-color);
  border-radius: 2px;
  background-color: rgba(255, 255, 255, 0.05);
  box-shadow: var(--aug-shadow-base);
  transition: var(--aug-transition);
  width: 100%;
  padding: 0.8rem;
}

.contactInput:focus-within {
  box-shadow: var(--aug-shadow-hover);
  --aug-border-opacity: 0.8;
}

/* ===== INTERACTIVE COMPONENTS ===== */
.cyber {
  position: relative;
  padding: 0.75rem 1rem;
  margin-top: 1rem;
  transition: var(--aug-transition);
  --aug-border-opacity: var(--aug-border-opacity);
  --aug-border-all: var(--aug-border-width);
  --aug-border-bg: var(--aug-border-color);
  --aug-background: var(--aug-primary-bg) !important;
  border: var(--aug-border-width) solid var(--aug-border-color);
  --aug-inlay-all: 4px;
  --aug-inlay-bg: var(--aug-primary-bg);
  --aug-inlay-opacity: 0.5;
}

.cyber:hover {
  --aug-background: #02141e;
  box-shadow: var(--aug-shadow-hover);
}
/* ===== CONSISTENT HOVER EFFECTS ===== */
.hoverGlow {
  transition: var(--aug-transition);
}

.hoverGlow:hover {
  box-shadow: var(--aug-shadow-hover);
  transform: translateY(-2px);
}

.hoverScale {
  transition: var(--aug-transition);
}

.hoverScale:hover {
  transform: scale(1.02);
  box-shadow: var(--aug-shadow-hover);
}

.hoverBorder {
  transition: var(--aug-transition);
}

.hoverBorder:hover {
  border-color: rgba(0, 240, 255, 0.2);
  box-shadow: var(--aug-shadow-hover);
}

/* ===== ADDITIONAL MOBILE RESPONSIVE STYLES ===== */
@media (max-width: 480px) {
  .skillContainer {
    padding: 1rem;
    margin-bottom: 0.75rem;
  }

  .contactInput {
    padding: 0.5rem;
    font-size: 0.85rem;
  }

  .cyber {
    padding: 0.5rem 0.75rem;
    margin-top: 0.5rem;
  }

  .protocolContent {
    padding: 1rem;
  }

  .terminalContentTemp {
    padding: 0.75rem;
    white-space: normal;
  }

  /* Disable hover effects on mobile for better touch experience */
  .hoverGlow:hover,
  .hoverScale:hover,
  .hoverBorder:hover {
    transform: none;
    box-shadow: var(--aug-shadow-base);
  }
}